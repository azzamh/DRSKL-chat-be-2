version: "3.9"
services:
  postgres-user:
    image: postgres:15
    container_name: postgres-user
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_PORT=${POSTGRES_PORT_USER}
    ports:
      - "5432:5432"
    networks:
      - chat-network
  postgres-chat:
    image: postgres:15
    container_name: postgres-chat
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_PORT=${POSTGRES_PORT_CHAT}
    ports:
      - "5433:5432"
    networks:
      - chat-network

  redis:
    image: redis:latest
    container_name: redis
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    ports:
      - "6379:6379"
    networks:
      - chat-network

  haproxy:
    image: haproxy:2.8
    container_name: haproxy
    ports:
      - "8888:8888"
      - "8404:8404"
    volumes:
      - ./haproxy/haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg
    networks:
      - chat-network
    environment:
      - TZ=Asia/Jakarta
    dns:
      - 127.0.0.11
    dns_search:
      - chat-network

  chat-service:
    build:
      context: ./chat-service
      target: development
    container_name: chat-service
    environment:
      - PORT=${CHAT_SERVICE_PORT}
      - DB_HOST=${POSTGRES_HOST_CHAT}
      - DB_PORT=${POSTGRES_PORT}
      - JWT_SECRET=${JWT_SECRET}
      - ADMIN_JWT_SECRET=${ADMIN_JWT_SECRET}
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    depends_on:
      - postgres-chat
      - redis
    ports:
      - "${CHAT_SERVICE_PORT}:${CHAT_SERVICE_PORT}"
    volumes:
      - ./chat-service:/app
      - /app/node_modules
    networks:
      - chat-network
    command: npx nodemon src/server.ts

  realtime-service-1:
    build:
      context: ./realtime-service
      target: development
    container_name: realtime-service-1
    environment:
      - PORT=${REALTIME_SERVICE_PORT1}
      - JWT_SECRET=${JWT_SECRET}
      - ADMIN_JWT_SECRET=${ADMIN_JWT_SECRET}
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    depends_on:
      - redis
    ports:
      - "${REALTIME_SERVICE_PORT1}:${REALTIME_SERVICE_PORT1}"
    volumes:
      - ./realtime-service:/app
      - /app/node_modules
    networks:
      - chat-network
    command: npx nodemon src/server.ts

  realtime-service-2:
    build:
      context: ./realtime-service
      target: development
    container_name: realtime-service-2
    environment:
      - PORT=${REALTIME_SERVICE_PORT2}
      - JWT_SECRET=${JWT_SECRET}
      - ADMIN_JWT_SECRET=${ADMIN_JWT_SECRET}
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    depends_on:
      - redis
    ports:
      - "${REALTIME_SERVICE_PORT2}:${REALTIME_SERVICE_PORT2}"
    volumes:
      - ./realtime-service:/app
      - /app/node_modules
    networks:
      - chat-network
    command: npx nodemon src/server.ts

  user-service:
    build:
      context: ./user-service
      target: development
    container_name: user-service
    environment:
      - PORT=${USER_SERVICE_PORT}
      - DB_HOST=${POSTGRES_HOST_USER}
      - DB_PORT=${POSTGRES_PORT}
      - JWT_SECRET=${JWT_SECRET}
      - ADMIN_JWT_SECRET=${ADMIN_JWT_SECRET}
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
      - REDIS_PASSWORD=${REDIS_PASSWORD}  
      - CHAT_SERVICE_URL=${CHAT_SERVICE_URL}
      - PRESENCE_SERVICE_URL=${PRESENCE_SERVICE_URL}
    depends_on:
      - postgres-user
      - redis
    ports:
      - "${USER_SERVICE_PORT}:${USER_SERVICE_PORT}"
    volumes:
      - ./user-service:/app
      - /app/node_modules
    networks:
      - chat-network
    command: npx nodemon src/server.ts

networks:
  chat-network:
    driver: bridge
